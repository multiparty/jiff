{"list":[{"title":"bits","link":"<a href=\"bits.html\">bits</a>","description":"<p>Contains bits protocols (including rejection sampling and bits operations)</p>\n<p><b>Important: bit protocols (including bit_decomposition) are unaware of any extension specific customizations, and will operate as\non the given shares as if they are natural numbers in Zp. Make sure to take into consideration any magnification/shift transformations\nneeded to translate correctly between plain representations and extension representations of bits! </b></p>"},{"title":"bits.jiffClient.protocols.bits.bit_composition","link":"<a href=\"bits.html#.jiffClient.protocols.bits.bit_composition\">jiffClient.protocols.bits.bit_composition</a>","description":"<p>Creates a secret share of the number represented by the given array of secret shared bits.\nRequires no communication, only local operations</p>"},{"title":"bits.jiffClient.protocols.bits.cadd","link":"<a href=\"bits.html#.jiffClient.protocols.bits.cadd\">jiffClient.protocols.bits.cadd</a>","description":"<p>Compute sum of bitwise secret shared number and a constant</p>"},{"title":"bits.jiffClient.protocols.bits.cdivl","link":"<a href=\"bits.html#.jiffClient.protocols.bits.cdivl\">jiffClient.protocols.bits.cdivl</a>","description":"<p>Computes integer division of [secret bits] / constant</p>"},{"title":"bits.jiffClient.protocols.bits.cdivr","link":"<a href=\"bits.html#.jiffClient.protocols.bits.cdivr\">jiffClient.protocols.bits.cdivr</a>","description":"<p>Computes integer division of constant / [secret bits]</p>"},{"title":"bits.jiffClient.protocols.bits.ceq","link":"<a href=\"bits.html#.jiffClient.protocols.bits.ceq\">jiffClient.protocols.bits.ceq</a>","description":"<p>Checks whether the given bitwise secret shared number and numeric constant are equal</p>"},{"title":"bits.jiffClient.protocols.bits.cgt","link":"<a href=\"bits.html#.jiffClient.protocols.bits.cgt\">jiffClient.protocols.bits.cgt</a>","description":"<p>Checks whether given secret shared bits are greater than the given constant</p>"},{"title":"bits.jiffClient.protocols.bits.cgteq","link":"<a href=\"bits.html#.jiffClient.protocols.bits.cgteq\">jiffClient.protocols.bits.cgteq</a>","description":"<p>Checks whether given secret shared bits are greater or equal to the given constant</p>"},{"title":"bits.jiffClient.protocols.bits.clt","link":"<a href=\"bits.html#.jiffClient.protocols.bits.clt\">jiffClient.protocols.bits.clt</a>","description":"<p>Checks whether given secret shared bits are less than the given constant</p>"},{"title":"bits.jiffClient.protocols.bits.clteq","link":"<a href=\"bits.html#.jiffClient.protocols.bits.clteq\">jiffClient.protocols.bits.clteq</a>","description":"<p>Checks whether given secret shared bits are less or equal to the given constant</p>"},{"title":"bits.jiffClient.protocols.bits.cmult","link":"<a href=\"bits.html#.jiffClient.protocols.bits.cmult\">jiffClient.protocols.bits.cmult</a>","description":"<p>Compute [secret bits] * constant</p>"},{"title":"bits.jiffClient.protocols.bits.cneq","link":"<a href=\"bits.html#.jiffClient.protocols.bits.cneq\">jiffClient.protocols.bits.cneq</a>","description":"<p>Checks whether the given bitwise secret shared number and numeric constant are not equal</p>"},{"title":"bits.jiffClient.protocols.bits.csubl","link":"<a href=\"bits.html#.jiffClient.protocols.bits.csubl\">jiffClient.protocols.bits.csubl</a>","description":"<p>Compute [secret bits] - [constant bits]</p>"},{"title":"bits.jiffClient.protocols.bits.csubr","link":"<a href=\"bits.html#.jiffClient.protocols.bits.csubr\">jiffClient.protocols.bits.csubr</a>","description":"<p>Compute [constant bits] - [secret bits]</p>"},{"title":"bits.jiffClient.protocols.bits.open","link":"<a href=\"bits.html#.jiffClient.protocols.bits.open\">jiffClient.protocols.bits.open</a>","description":"<p>Opens the given array of secret shared bits.\nThis works regardless of whether the represented value fit inside the corresponding field or not</p>"},{"title":"bits.jiffClient.protocols.bits.rejection_sampling","link":"<a href=\"bits.html#.jiffClient.protocols.bits.rejection_sampling\">jiffClient.protocols.bits.rejection_sampling</a>","description":"<p>Retrieves preprocessed rejection_sampling bits or performs the rejection sampling on the fly if crypto_provider is enabled</p>"},{"title":"bits.jiffClient.protocols.bits.sadd","link":"<a href=\"bits.html#.jiffClient.protocols.bits.sadd\">jiffClient.protocols.bits.sadd</a>","description":"<p>Compute [secret bits1] + [secret bits2]</p>"},{"title":"bits.jiffClient.protocols.bits.sdiv","link":"<a href=\"bits.html#.jiffClient.protocols.bits.sdiv\">jiffClient.protocols.bits.sdiv</a>","description":"<p>Computes integer division of [secret bits 1] / [secret bits 2]</p>"},{"title":"bits.jiffClient.protocols.bits.seq","link":"<a href=\"bits.html#.jiffClient.protocols.bits.seq\">jiffClient.protocols.bits.seq</a>","description":"<p>Checks whether the two given bitwise secret shared numbers are equal</p>"},{"title":"bits.jiffClient.protocols.bits.sgt","link":"<a href=\"bits.html#.jiffClient.protocols.bits.sgt\">jiffClient.protocols.bits.sgt</a>","description":"<p>Checks whether the first given bitwise secret shared number is greater than the second bitwise secret shared number</p>"},{"title":"bits.jiffClient.protocols.bits.sgteq","link":"<a href=\"bits.html#.jiffClient.protocols.bits.sgteq\">jiffClient.protocols.bits.sgteq</a>","description":"<p>Checks whether the first given bitwise secret shared number is greater than or equal to the second bitwise secret shared number</p>"},{"title":"bits.jiffClient.protocols.bits.share","link":"<a href=\"bits.html#.jiffClient.protocols.bits.share\">jiffClient.protocols.bits.share</a>","description":"<p>Share a number as an array of secret bits\nThis takes the same parameters as jiff-instance.share, but returns an array of secret bit shares per sending party.\nEach bit array starts with the least significant bit at index 0, and most significant bit at index length-1</p>"},{"title":"bits.jiffClient.protocols.bits.slt","link":"<a href=\"bits.html#.jiffClient.protocols.bits.slt\">jiffClient.protocols.bits.slt</a>","description":"<p>Checks whether the first given bitwise secret shared number is less than the second bitwise secret shared number</p>"},{"title":"bits.jiffClient.protocols.bits.slteq","link":"<a href=\"bits.html#.jiffClient.protocols.bits.slteq\">jiffClient.protocols.bits.slteq</a>","description":"<p>Checks whether the first given bitwise secret shared number is less or equal to the second bitwise secret shared number</p>"},{"title":"bits.jiffClient.protocols.bits.smult","link":"<a href=\"bits.html#.jiffClient.protocols.bits.smult\">jiffClient.protocols.bits.smult</a>","description":"<p>Compute [secret bits1] * [secret bits2]</p>"},{"title":"bits.jiffClient.protocols.bits.sneq","link":"<a href=\"bits.html#.jiffClient.protocols.bits.sneq\">jiffClient.protocols.bits.sneq</a>","description":"<p>Checks whether the two given bitwise secret shared numbers are not equal</p>"},{"title":"bits.jiffClient.protocols.bits.ssub","link":"<a href=\"bits.html#.jiffClient.protocols.bits.ssub\">jiffClient.protocols.bits.ssub</a>","description":"<p>Compute [secret bits1] - [secret bits2]</p>"},{"title":"GuardedSocket","link":"<a href=\"GuardedSocket.html\">GuardedSocket</a>","description":"<p>A guarded socket with an attached mailbox.</p>\n<p>The socket uses the mailbox to store all outgoing messages, and removes them from the mailbox only when\nthe server acknowledges their receipt. The socket resends mailbox upon re-connection. Extends {@link https://socket.io/docs/client-api/#Socket}.</p>"},{"title":"GuardedSocket#disconnect","link":"<a href=\"GuardedSocket.html#disconnect\">disconnect</a>","description":"<p>Wraps socket.io regular disconnect with a call to a hook before disconnection</p>"},{"title":"GuardedSocket#is_empty","link":"<a href=\"GuardedSocket.html#is_empty\">is_empty</a>","description":"<p>Checks if the socket mailbox is empty (all communication was done and acknowledged),\nused in safe_disconnect</p>"},{"title":"GuardedSocket#resend_mailbox","link":"<a href=\"GuardedSocket.html#resend_mailbox\">resend_mailbox</a>","description":"<p>Re-sends all pending messages</p>"},{"title":"GuardedSocket#safe_disconnect","link":"<a href=\"GuardedSocket.html#safe_disconnect\">safe_disconnect</a>","description":"<p>Safe disconnect: disconnect only after all messages (including free) were acknowledged and\nall pending opens were resolved</p>"},{"title":"GuardedSocket#safe_emit","link":"<a href=\"GuardedSocket.html#safe_emit\">safe_emit</a>","description":"<p>Safe emit: stores message in the mailbox until acknowledgment is received, results in socket.emit(label, msg) call(s)</p>"},{"title":"handlers","link":"<a href=\"handlers.html\">handlers</a>","description":"<p>Contains handlers for communication events</p>"},{"title":"handlers.jiffClient.handlers.build_initialization_message","link":"<a href=\"handlers.html#.jiffClient.handlers.build_initialization_message\">jiffClient.handlers.build_initialization_message</a>","description":"<p>Builds the initialization message for this instance</p>"},{"title":"handlers.jiffClient.handlers.connected","link":"<a href=\"handlers.html#.jiffClient.handlers.connected\">jiffClient.handlers.connected</a>","description":"<p>Begins initialization of this instance by sending the initialization message to the server.\nShould only be called after connection is established.\nDo not call this manually unless you know what you are doing, use &lt;jiff_instance&gt;.connect() instead!</p>"},{"title":"handlers.jiffClient.handlers.error","link":"<a href=\"handlers.html#.jiffClient.handlers.error\">jiffClient.handlers.error</a>","description":"<p>Called when an error occurs</p>"},{"title":"handlers.jiffClient.handlers.initialized","link":"<a href=\"handlers.html#.jiffClient.handlers.initialized\">jiffClient.handlers.initialized</a>","description":"<p>Called after the server approves initialization of this instance.\nSets the instance id, the count of parties in the computation, and the public keys\nof initialized parties.</p>"},{"title":"handlers.jiffClient.handlers.receive_crypto_provider","link":"<a href=\"handlers.html#.jiffClient.handlers.receive_crypto_provider\">jiffClient.handlers.receive_crypto_provider</a>","description":"<p>Parse crypto provider message and resolve associated promise.</p>"},{"title":"handlers.jiffClient.handlers.receive_custom","link":"<a href=\"handlers.html#.jiffClient.handlers.receive_custom\">jiffClient.handlers.receive_custom</a>","description":"<p>Called when this party receives a custom tag message from any party (including itself).\nIf a custom listener was setup to listen to the tag, the message is passed to the listener.\nOtherwise, the message is stored until such a listener is provided.</p>"},{"title":"handlers.jiffClient.handlers.receive_open","link":"<a href=\"handlers.html#.jiffClient.handlers.receive_open\">jiffClient.handlers.receive_open</a>","description":"<p>Resolves the deferred corresponding to operation_id and sender_id.</p>"},{"title":"handlers.jiffClient.handlers.receive_share","link":"<a href=\"handlers.html#.jiffClient.handlers.receive_share\">jiffClient.handlers.receive_share</a>","description":"<p>Store the received share and resolves the corresponding\ndeferred if needed.</p>"},{"title":"handlers.jiffClient.handlers.store_public_keys","link":"<a href=\"handlers.html#.jiffClient.handlers.store_public_keys\">jiffClient.handlers.store_public_keys</a>","description":"<p>Parse and store the given public keys</p>"},{"title":"helpers","link":"<a href=\"helpers.html\">helpers</a>","description":"<p>Contains helper functions: these may be overriden by extensions to customize behavior</p>"},{"title":"helpers.Deferred","link":"<a href=\"helpers.Deferred.html\">Deferred</a>","description":"<p>Polyfill for jQuery Deferred\nFrom https://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules/Promise.jsm/Deferred</p>"},{"title":"helpers.Deferred#promise","link":"<a href=\"helpers.Deferred.html#promise\">promise</a>","description":"<p>A newly created Promise object.\nInitially in pending state.</p>"},{"title":"helpers.Deferred#reject","link":"<a href=\"helpers.Deferred.html#reject\">reject</a>","description":"<p>A method to reject the associated Promise with the value passed.\nIf the promise is already settled it does nothing.</p>"},{"title":"helpers.Deferred#resolve","link":"<a href=\"helpers.Deferred.html#resolve\">resolve</a>","description":"<p>A method to resolve the associate Promise with the value passed.</p>"},{"title":"helpers.jiffClient.helpers.array_equals","link":"<a href=\"helpers.html#.jiffClient.helpers.array_equals\">jiffClient.helpers.array_equals</a>","description":"<p>Check that two sorted arrays are equal.</p>"},{"title":"helpers.jiffClient.helpers.bits_to_number","link":"<a href=\"helpers.html#.jiffClient.helpers.bits_to_number\">jiffClient.helpers.bits_to_number</a>","description":"<p>Transforms the given array of bits to a number.</p>"},{"title":"helpers.jiffClient.helpers.bLog","link":"<a href=\"helpers.html#.jiffClient.helpers.bLog\">jiffClient.helpers.bLog</a>","description":"<p>Compute Log to a given base.</p>"},{"title":"helpers.jiffClient.helpers.ceil","link":"<a href=\"helpers.html#.jiffClient.helpers.ceil\">jiffClient.helpers.ceil</a>","description":"<p>Ceil of a number.</p>"},{"title":"helpers.jiffClient.helpers.extended_gcd","link":"<a href=\"helpers.html#.jiffClient.helpers.extended_gcd\">jiffClient.helpers.extended_gcd</a>","description":"<p>Extended Euclidean for finding inverses.</p>"},{"title":"helpers.jiffClient.helpers.floor","link":"<a href=\"helpers.html#.jiffClient.helpers.floor\">jiffClient.helpers.floor</a>","description":"<p>Floor of a number</p>"},{"title":"helpers.jiffClient.helpers.get_party_number","link":"<a href=\"helpers.html#.jiffClient.helpers.get_party_number\">jiffClient.helpers.get_party_number</a>","description":"<p>Get the party number from the given party_id, the number is used to compute/open shares.\nIf party id was a number (regular party), that number is returned,\nIf party id refers to the ith server, then party_count + i is returned (i &gt; 0).</p>"},{"title":"helpers.jiffClient.helpers.is_prime","link":"<a href=\"helpers.html#.jiffClient.helpers.is_prime\">jiffClient.helpers.is_prime</a>","description":"<p>Checks if the given number is prime using AKS primality test</p>"},{"title":"helpers.jiffClient.helpers.mod","link":"<a href=\"helpers.html#.jiffClient.helpers.mod\">jiffClient.helpers.mod</a>","description":"<p>Correct Mod instead of javascript's remainder (%).</p>"},{"title":"helpers.jiffClient.helpers.number_to_bits","link":"<a href=\"helpers.html#.jiffClient.helpers.number_to_bits\">jiffClient.helpers.number_to_bits</a>","description":"<p>Transforms the given number to an array of bits (numbers).\nLower indices in the returned array corresponding to less significant bits.</p>"},{"title":"helpers.jiffClient.helpers.pow_mod","link":"<a href=\"helpers.html#.jiffClient.helpers.pow_mod\">jiffClient.helpers.pow_mod</a>","description":"<p>Fast Exponentiation Mod</p>"},{"title":"helpers.jiffClient.helpers.random","link":"<a href=\"helpers.html#.jiffClient.helpers.random\">jiffClient.helpers.random</a>","description":"<p>Generate a random integer between 0 and max-1 [inclusive].\nModify this to change the source of randomness and how it is generated.</p>"},{"title":"helpers.jiffClient.helpers.sort_ids","link":"<a href=\"helpers.html#.jiffClient.helpers.sort_ids\">jiffClient.helpers.sort_ids</a>","description":"<p>sorts an array of ids (in place) according to a consistent ordering</p>"},{"title":"helpers.jiffClient.helpers.Zp_equals","link":"<a href=\"helpers.html#.jiffClient.helpers.Zp_equals\">jiffClient.helpers.Zp_equals</a>","description":"<p>Check that two Zps are equal. Used to determine if shares can be computed on or not.</p>"},{"title":"hooks","link":"<a href=\"hooks.html\">hooks</a>","description":"<p>The hooks for this instance.\nCheckout the <a href=\"hooks.html\">hooks documentation</a></p>"},{"title":"hooks.computeShares","link":"<a href=\"hooks.html#.computeShares\">computeShares</a>","description":"<p>Hook for computing shares of a secret</p>"},{"title":"hooks.execute_array_hooks","link":"<a href=\"hooks.html#.execute_array_hooks\">execute_array_hooks</a>","description":"<p>Execute all hooks attached to the given name in order.\nHooks are executed sequentially such that the first hook's return value is passed into the second and so on.</p>"},{"title":"jiff-instance.protocols.bits.jiffClient.protocols.bits.receive_open","link":"<a href=\"jiff-instance.protocols.bits.html#.jiffClient.protocols.bits.receive_open\">jiffClient.protocols.bits.receive_open</a>","description":"<p>Receives an opening of an array of secret bits without owning shares of the underlying value.\nSimilar to jiff.receive_open() but for bits.\nThis works regardless of whether the represented value fit inside the corresponding field or not</p>"},{"title":"jiff-instance.protocols.bits.receive_open_bits","link":"<a href=\"jiff-instance.protocols.bits.html#.receive_open_bits\">receive_open_bits</a>","description":"<p>Receives an opening of an array of secret bits without owning shares of the underlying value.\nSimilar to jiff.receive_open() but for bits.\nThis works regardless of whether the represented value fit inside the corresponding field or not</p>"},{"title":"jiffClient.utils.all_promises","link":"<a href=\"jiffClient.utils.html#.all_promises\">all_promises</a>","description":"<p>Combines all the promises of the given share into a single promise that is resolved when\nall shares are resolved</p>"},{"title":"module.exports.gZp","link":"<a href=\"module.exports.html#.gZp\">gZp</a>","description":"<p>The default mod to be used in a jiff instance if a custom mod was not provided.</p>"},{"title":"module.exports.maxInitializationRetries","link":"<a href=\"module.exports.html#.maxInitializationRetries\">maxInitializationRetries</a>","description":"<p>Maximum numbers of retries on failed initialization.</p>"},{"title":"module.exports.reconnectionDelay","link":"<a href=\"module.exports.html#.reconnectionDelay\">reconnectionDelay</a>","description":"<p>Socket connection timeouts</p>"},{"title":"module:jiff-client","link":"<a href=\"module-jiff-client.html\">jiff-client</a>","description":"<p>JIFF Client.</p>\n<p>Exposes the constructor for the {@link module:jiff-client~JIFFClient} class.</p>\n<p>In the browser, this adds <code>JIFFClient</code> as a global identifier.</p>\n<p>In the browser, this can be accessed via:</p>\n<pre><code>\n  &lt;script src=\"jiff-client.js\"&gt;&lt;/script&gt;\n  &lt;script type=\"text/javascript\"&gt;\n    var jiffClientInstance = new JIFFClient(hostname, computationId, options);\n  &lt;/script&gt;\n</code></pre>\n<p>In node.js, this can be accessed via:</p>\n<pre><code>\n  const JIFFClient = require('jiffClient');\n  const jiffClientInstance = new JIFFClient(hostname, computationId, options);\n\n</code></pre>"},{"title":"module:jiff-client.JIFFClient.JIFFClient#execute_wait_callbacks","link":"<a href=\"module-jiff-client.JIFFClient.html#.JIFFClient#execute_wait_callbacks\">JIFFClient#execute_wait_callbacks</a>","description":"<p>Executes all callbacks for which the wait condition has been satisfied.\nRemove all executed callbacks so that they would not be executed in the future.</p>"},{"title":"module:jiff-client.JIFFClient.JIFFClient#initSocket","link":"<a href=\"module-jiff-client.JIFFClient.html#.JIFFClient#initSocket\">JIFFClient#initSocket</a>","description":"<p>Initialize socket listeners and events</p>"},{"title":"module:jiff-client.JIFFClient.JIFFClient#resolve_messages_waiting_for_keys","link":"<a href=\"module-jiff-client.JIFFClient.html#.JIFFClient#resolve_messages_waiting_for_keys\">JIFFClient#resolve_messages_waiting_for_keys</a>","description":"<p>Resolves all messages that were pending because their senders primary key was previously unknown.\nThese messages are decrypted and verified and handled appropriatly before being removed from the wait queue.</p>"},{"title":"module:jiff-client~JIFFClient","link":"<a href=\"module-jiff-client-JIFFClient.html\">JIFFClient</a>","description":"<p>Creates a new jiff client instance.</p>"},{"title":"module:jiff-client~JIFFClient#__initialized","link":"<a href=\"module-jiff-client-JIFFClient.html#__initialized\">__initialized</a>","description":"<p>Private. Do not use directly externally; use isInitialized() instead.</p>"},{"title":"module:jiff-client~JIFFClient#__ready","link":"<a href=\"module-jiff-client-JIFFClient.html#__ready\">__ready</a>","description":"<p>Private. Do not use directly externally; use isReady() instead.</p>"},{"title":"module:jiff-client~JIFFClient#add_to_barriers","link":"<a href=\"module-jiff-client-JIFFClient.html#add_to_barriers\">add_to_barriers</a>","description":"<p>Adds given promise to all active barriers.</p>"},{"title":"module:jiff-client~JIFFClient#apply_extension","link":"<a href=\"module-jiff-client-JIFFClient.html#apply_extension\">apply_extension</a>","description":"<p>Applies the given extension.\nIf the extension is safe (as per can_apply_extension), it will be applied successfully.\nIf the extension is not safe to be applied, an exception will be thrown with an appropriate error message.</p>"},{"title":"module:jiff-client~JIFFClient#barriers","link":"<a href=\"module-jiff-client-JIFFClient.html#barriers\">barriers</a>","description":"<p>Stores all promises created within some barrier.</p>"},{"title":"module:jiff-client~JIFFClient#can_apply_extension","link":"<a href=\"module-jiff-client-JIFFClient.html#can_apply_extension\">can_apply_extension</a>","description":"<p>Checks if a given extension can be safely applied to the instance</p>"},{"title":"module:jiff-client~JIFFClient#computation_id","link":"<a href=\"module-jiff-client-JIFFClient.html#computation_id\">computation_id</a>","description":"<p>Stores the computation id.</p>"},{"title":"module:jiff-client~JIFFClient#connect","link":"<a href=\"module-jiff-client-JIFFClient.html#connect\">connect</a>","description":"<p>Connect to the server and starts listening.</p>"},{"title":"module:jiff-client~JIFFClient#counters","link":"<a href=\"module-jiff-client-JIFFClient.html#counters\">counters</a>","description":"<p>Store sharing and shares counter which keeps track of the count of\nsharing operations (share and open) and the total number of shares\nrespectively (used to get a unique id for each share operation and\nshare object).</p>"},{"title":"module:jiff-client~JIFFClient#counters.reset","link":"<a href=\"module-jiff-client-JIFFClient.html#counters#.reset\">reset</a>","description":"<p>Resets all the counters for op_ids</p>"},{"title":"module:jiff-client~JIFFClient#crypto_provider","link":"<a href=\"module-jiff-client-JIFFClient.html#crypto_provider\">crypto_provider</a>","description":"<p>Flags whether to use the server as a fallback for objects that were not pre-processed properly</p>"},{"title":"module:jiff-client~JIFFClient#currentPreprocessingTasks","link":"<a href=\"module-jiff-client-JIFFClient.html#currentPreprocessingTasks\">currentPreprocessingTasks</a>","description":"<p>Stores currently executing preprocessing tasks.</p>"},{"title":"module:jiff-client~JIFFClient#custom_messages_mailbox","link":"<a href=\"module-jiff-client-JIFFClient.html#custom_messages_mailbox\">custom_messages_mailbox</a>","description":"<p>Stores custom messages that are received before their listeners are set. Messages are stored in order.\n{ 'tag' =&gt; [ { &quot;sender_id&quot;: &lt;sender_id&gt;, &quot;message&quot;: <message> }, ... ] }</p>\n<p>Once a listener has been set, the corresponding messages are sent to it in order.</p>"},{"title":"module:jiff-client~JIFFClient#default_preprocessing_protocols","link":"<a href=\"module-jiff-client-JIFFClient.html#default_preprocessing_protocols\">default_preprocessing_protocols</a>","description":"<p>Store the default preprocessing protocols for each type of preprocessing value</p>"},{"title":"module:jiff-client~JIFFClient#deferreds","link":"<a href=\"module-jiff-client-JIFFClient.html#deferreds\">deferreds</a>","description":"<p>A map from some message operation id to a deferred resolved when that message is received.</p>"},{"title":"module:jiff-client~JIFFClient#disconnect","link":"<a href=\"module-jiff-client-JIFFClient.html#disconnect\">disconnect</a>","description":"<p>Disconnects from the computation.\nAllows the client program to exit.</p>"},{"title":"module:jiff-client~JIFFClient#emit","link":"<a href=\"module-jiff-client-JIFFClient.html#emit\">emit</a>","description":"<p>Sends a custom message to a subset of parties</p>"},{"title":"module:jiff-client~JIFFClient#end_barrier","link":"<a href=\"module-jiff-client-JIFFClient.html#end_barrier\">end_barrier</a>","description":"<p>Executes the callback only after all promises / secret shares in the barrier were resolved.</p>"},{"title":"module:jiff-client~JIFFClient#executePreprocessing","link":"<a href=\"module-jiff-client-JIFFClient.html#executePreprocessing\">executePreprocessing</a>","description":"<p>Ask JIFF to start executing preprocessing for tasks previously added by {@link module:jiff-client~JIFFClient#preprocessing}.</p>\n<p>Calls the provided callback when the preprocessing tasks are all done.</p>"},{"title":"module:jiff-client~JIFFClient#extension_applied","link":"<a href=\"module-jiff-client-JIFFClient.html#extension_applied\">extension_applied</a>","description":"<p>Called when an extension is applied successfully. Override to change behavior of your extension based on future extensions.</p>"},{"title":"module:jiff-client~JIFFClient#extensions","link":"<a href=\"module-jiff-client-JIFFClient.html#extensions\">extensions</a>","description":"<p>An array containing the names (jiff-client-[name].js) of the extensions that are\napplied to this instance.</p>"},{"title":"module:jiff-client~JIFFClient#free","link":"<a href=\"module-jiff-client-JIFFClient.html#free\">free</a>","description":"<p>Emits event to free up all the resources allocated for this party on the server.\nIt is best not to call this function directly, as it can break things if resources still need to be used.\nInstead, use jiff.disconnect(safe, free, callback) to free after safely disconnecting.</p>"},{"title":"module:jiff-client~JIFFClient#from_crypto_provider","link":"<a href=\"module-jiff-client-JIFFClient.html#from_crypto_provider\">from_crypto_provider</a>","description":"<p>Requests secret(s) from the server (crypto provider) of type matching the given label.</p>"},{"title":"module:jiff-client~JIFFClient#gen_op_id","link":"<a href=\"module-jiff-client-JIFFClient.html#gen_op_id\">gen_op_id</a>","description":"<p>Generate a unique operation id for a new operation object.\nThe returned op_id will be unique with respect to other operations, and identifies the same\noperation across all parties, as long as all parties are executing instructions in the same order.</p>"},{"title":"module:jiff-client~JIFFClient#gen_op_id2","link":"<a href=\"module-jiff-client-JIFFClient.html#gen_op_id2\">gen_op_id2</a>","description":"<p>Generate a unique operation id for a new operation object given two distinct executing parties lists.\nFor example, when sharing, this is given two potentially different lists of senders and receivers.\nThe returned op_id will be unique with respect to other operations, and identifies the same\noperation across all parties, as long as all parties are executing instructions in the same order.</p>"},{"title":"module:jiff-client~JIFFClient#gen_op_id2_preprocessing","link":"<a href=\"module-jiff-client-JIFFClient.html#gen_op_id2_preprocessing\">gen_op_id2_preprocessing</a>","description":"<p>Generate a unique operation id for a new operation object given two distinct executing parties lists (for preprocessing).\nFor example, when sharing, this is given two potentially different lists of senders and receivers.\nThe returned op_id will be unique with respect to other operations, and identifies the same\noperation across all parties, as long as all parties are executing instructions in the same order.</p>"},{"title":"module:jiff-client~JIFFClient#gen_op_id_preprocessing","link":"<a href=\"module-jiff-client-JIFFClient.html#gen_op_id_preprocessing\">gen_op_id_preprocessing</a>","description":"<p>Generate a unique operation id for a new operation object (for preprocessing)\nThe returned op_id will be unique with respect to other operations, and identifies the same\noperation across all parties, as long as all parties are executing instructions in the same order.</p>"},{"title":"module:jiff-client~JIFFClient#get_preprocessing","link":"<a href=\"module-jiff-client-JIFFClient.html#get_preprocessing\">get_preprocessing</a>","description":"<p>Get a preprocessed share/value by associated op_id. If value does not exist\nFallback to some user specified way for creating it</p>"},{"title":"module:jiff-client~JIFFClient#handlers","link":"<a href=\"module-jiff-client-JIFFClient.html#handlers\">handlers</a>","description":"<p>Contains handlers for communication events</p>"},{"title":"module:jiff-client~JIFFClient#has_extension","link":"<a href=\"module-jiff-client-JIFFClient.html#has_extension\">has_extension</a>","description":"<p>Checks if the given extension is applied.</p>"},{"title":"module:jiff-client~JIFFClient#has_preprocessing","link":"<a href=\"module-jiff-client-JIFFClient.html#has_preprocessing\">has_preprocessing</a>","description":"<p>Checks if the given operation uses preprocessed values</p>"},{"title":"module:jiff-client~JIFFClient#helpers","link":"<a href=\"module-jiff-client-JIFFClient.html#helpers\">helpers</a>","description":"<p>Helper functions [DO NOT MODIFY UNLESS YOU KNOW WHAT YOU ARE DOING].</p>"},{"title":"module:jiff-client~JIFFClient#hooks","link":"<a href=\"module-jiff-client-JIFFClient.html#hooks\">hooks</a>","description":"<p>The hooks for this instance.\nCheckout the <a href=\"hooks.html\">hooks documentation</a></p>"},{"title":"module:jiff-client~JIFFClient#hostname","link":"<a href=\"module-jiff-client-JIFFClient.html#hostname\">hostname</a>","description":"<p>The server hostname, ends with a slash, includes port and protocol (http/https).</p>"},{"title":"module:jiff-client~JIFFClient#id","link":"<a href=\"module-jiff-client-JIFFClient.html#id\">id</a>","description":"<p>The id of this party.</p>"},{"title":"module:jiff-client~JIFFClient#initialization_counter","link":"<a href=\"module-jiff-client-JIFFClient.html#initialization_counter\">initialization_counter</a>","description":"<p>Counts how many times JIFF attempted to initialize with the server\nwithout success consecutively.</p>"},{"title":"module:jiff-client~JIFFClient#internal_open","link":"<a href=\"module-jiff-client-JIFFClient.html#internal_open\">internal_open</a>","description":"<p>Same as open, but used by internal JIFF primitives/protocols, do not override this!</p>"},{"title":"module:jiff-client~JIFFClient#internal_share","link":"<a href=\"module-jiff-client-JIFFClient.html#internal_share\">internal_share</a>","description":"<p>Same as share, but used by internal JIFF primitives/protocols, do not override this!</p>"},{"title":"module:jiff-client~JIFFClient#isInitialized","link":"<a href=\"module-jiff-client-JIFFClient.html#isInitialized\">isInitialized</a>","description":"<p>Returns whether this instance initialized successfully with the server.\nNote that this can be true even when isReady() returns false, in case where some other parties have not\ninitialized yet!</p>"},{"title":"module:jiff-client~JIFFClient#isReady","link":"<a href=\"module-jiff-client-JIFFClient.html#isReady\">isReady</a>","description":"<p>Returns whether this instance is capable of starting the computation.\nIn other words, the public keys for all parties and servers are known,\nand this party successfully initialized with the server.</p>"},{"title":"module:jiff-client~JIFFClient#jiffClient.wait_for","link":"<a href=\"module-jiff-client-JIFFClient_jiffClient.html#.wait_for\">wait_for</a>","description":"<p>Wait until the public keys of these parties are known.\nThe public keys may be known before the parties connect (if provided in the options),\nor they could be sent by the server after the parties connect.\nComputation specified in the callback may assume that these parties are connected,\nif they are not, the server will handle storing and relaying the needed messages\nto them when they connect.</p>"},{"title":"module:jiff-client~JIFFClient#keymap","link":"<a href=\"module-jiff-client-JIFFClient.html#keymap\">keymap</a>","description":"<p>A map from party id to public key. Where key is the party id (number), and\nvalue is the public key, which by default follows libsodium's specs (Uint8Array).</p>"},{"title":"module:jiff-client~JIFFClient#listen","link":"<a href=\"module-jiff-client-JIFFClient.html#listen\">listen</a>","description":"<p>Registers the given function as a listener for messages with the given tag.\nRemoves any previously set listener for this tag.</p>"},{"title":"module:jiff-client~JIFFClient#listeners","link":"<a href=\"module-jiff-client-JIFFClient.html#listeners\">listeners</a>","description":"<p>A map from tags to listeners (functions that take a sender_id and a string message).</p>\n<p>Stores listeners that are attached to this JIFF instance, listeners listen to custom messages sent by other parties.</p>"},{"title":"module:jiff-client~JIFFClient#logs","link":"<a href=\"module-jiff-client-JIFFClient.html#logs\">logs</a>","description":"<p>Used for logging/debugging</p>"},{"title":"module:jiff-client~JIFFClient#messagesWaitingKeys","link":"<a href=\"module-jiff-client-JIFFClient.html#messagesWaitingKeys\">messagesWaitingKeys</a>","description":"<p>Stores messages that are received with a signature prior to acquiring the public keys of the sender.\n{ 'party_id': [ { 'label': 'share/open/custom', <other attributes of the message> } ] }</p>"},{"title":"module:jiff-client~JIFFClient#op_id_seed","link":"<a href=\"module-jiff-client-JIFFClient.html#op_id_seed\">op_id_seed</a>","description":"<p>A prefix attached to all op_ids, can be changed using {@link module:jiff-client~JIFFClient#seed_ids}\nto guarantee uniqueness of auto generate ids in a user-side callback\nor event handler.</p>"},{"title":"module:jiff-client~JIFFClient#open","link":"<a href=\"module-jiff-client-JIFFClient.html#open\">open</a>","description":"<p>Open a secret share to reconstruct secret.</p>"},{"title":"module:jiff-client~JIFFClient#open_array","link":"<a href=\"module-jiff-client-JIFFClient.html#open_array\">open_array</a>","description":"<p>Opens an array of secret shares.</p>"},{"title":"module:jiff-client~JIFFClient#open_ND_array","link":"<a href=\"module-jiff-client-JIFFClient.html#open_ND_array\">open_ND_array</a>","description":"<p>Opens an n-dimensional array of secret shares.</p>"},{"title":"module:jiff-client~JIFFClient#options","link":"<a href=\"module-jiff-client-JIFFClient.html#options\">options</a>","description":"<p>Shallow copy of the options passed to the constructor.</p>"},{"title":"module:jiff-client~JIFFClient#party_count","link":"<a href=\"module-jiff-client-JIFFClient.html#party_count\">party_count</a>","description":"<p>Total party count in the computation, parties will take ids between 1 to party_count (inclusive).</p>"},{"title":"module:jiff-client~JIFFClient#preprocessing","link":"<a href=\"module-jiff-client-JIFFClient.html#preprocessing\">preprocessing</a>","description":"<p>Generate values used for JIFF operations in advance of the computation.</p>\n<p>Calling this function does not begin preprocessing, it just creates a preprocessing task. After you created\nyour desired tasks, you can ask JIFF to execute them via {@link module:jiff-client~JIFFClient#executePreprocessing}.</p>"},{"title":"module:jiff-client~JIFFClient#preprocessing_function_map","link":"<a href=\"module-jiff-client-JIFFClient.html#preprocessing_function_map\">preprocessing_function_map</a>","description":"<p>maps all primitive operations to the other operations they are dependent on, until leaves are primitives for which preprocessing protocols are defined,\nthis map is traversed during preprocessing to guide preprocessing of high level operations. Extensions should modify this map to reflect\nany required changes to preprocessing of modified primitives</p>"},{"title":"module:jiff-client~JIFFClient#preprocessing_table","link":"<a href=\"module-jiff-client-JIFFClient.html#preprocessing_table\">preprocessing_table</a>","description":"<p>Stores pre-computed values (beaver triples, random bits, etc) used to aid/speed up the main processes.</p>"},{"title":"module:jiff-client~JIFFClient#preprocessingBatchSize","link":"<a href=\"module-jiff-client-JIFFClient.html#preprocessingBatchSize\">preprocessingBatchSize</a>","description":"<p>Sets batch size for base level preprocessing tasks</p>"},{"title":"module:jiff-client~JIFFClient#preprocessingCallback","link":"<a href=\"module-jiff-client-JIFFClient.html#preprocessingCallback\">preprocessingCallback</a>","description":"<p>Callback to execute when preprocessing is done!</p>"},{"title":"module:jiff-client~JIFFClient#preprocessingDaemon","link":"<a href=\"module-jiff-client-JIFFClient.html#preprocessingDaemon\">preprocessingDaemon</a>","description":"<p>Preprocessing Daemon that executes all currently scheduled preprocessing tasks (entries in jiffClient.currentPreprocessingTasks array) in order.</p>"},{"title":"module:jiff-client~JIFFClient#protocols","link":"<a href=\"module-jiff-client-JIFFClient.html#protocols\">protocols</a>","description":"<p>A collection of useful protocols to be used during computation or preprocessing: extensions are encouraged to add useful\ncommon protocols here, under a sub namespace corresponding to the extension name.</p>"},{"title":"module:jiff-client~JIFFClient#public_key","link":"<a href=\"module-jiff-client-JIFFClient.html#public_key\">public_key</a>","description":"<p>The public key of this party, by default this follows libsodium's specs.</p>"},{"title":"module:jiff-client~JIFFClient#receive_open","link":"<a href=\"module-jiff-client-JIFFClient.html#receive_open\">receive_open</a>","description":"<p>Receive shares from the specified parties and reconstruct their secret.\nUse this function in a party that will receive some answer/value but does not have a share of it.</p>"},{"title":"module:jiff-client~JIFFClient#receive_open","link":"<a href=\"module-jiff-client-JIFFClient.html#receive_open\">receive_open</a>","description":"<p>Receive arrays of shares from the specified parties and reconstruct their secrets.\nUse this function in a party that will receive some answer/value but does not have a share of it.</p>"},{"title":"module:jiff-client~JIFFClient#remove_listener","link":"<a href=\"module-jiff-client-JIFFClient.html#remove_listener\">remove_listener</a>","description":"<p>Removes the custom message listener attached to the given tag</p>"},{"title":"module:jiff-client~JIFFClient#reshare","link":"<a href=\"module-jiff-client-JIFFClient.html#reshare\">reshare</a>","description":"<p>re-share an existing share (value) under a new threshold or to a new set of parties or both.\nDo not use this to refresh a share (use {@link module:jiff-client~JIFFClient#SecretShare#refresh} instead)</p>"},{"title":"module:jiff-client~JIFFClient#secret_key","link":"<a href=\"module-jiff-client-JIFFClient.html#secret_key\">secret_key</a>","description":"<p>The secret key of this party, by default this follows libsodium's specs.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html\">SecretShare</a>","description":"<p>The constructor function used by JIFF to create a new share. This can be overloaded by extensions to create custom shares.\nModifying this will modify how shares are generated in the BASE JIFF implementation.\nA share is a value/promise wrapped with a share object.\nA share also has methods for performing operations.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#add","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#add\">add</a>","description":"<p>Generic Addition.\nUses either the constant or secret version of this operator depending on type of paramter.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#bit_decomposition","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#bit_decomposition\">bit_decomposition</a>","description":"<p>Bit Decomposition: Transform existing share to an array of bit shares.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#cadd","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#cadd\">cadd</a>","description":"<p>Addition with a constant.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#cdiv","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#cdiv\">cdiv</a>","description":"<p>Integer divison with a share and a constant (this / cst).</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#cdivfac","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#cdivfac\">cdivfac</a>","description":"<p>Division by a constant factor of the number represented by the share.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#ceq","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#ceq\">ceq</a>","description":"<p>Equality test with a constant.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#cgt","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#cgt\">cgt</a>","description":"<p>Greater than with a constant.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#cgteqn","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#cgteqn\">cgteqn</a>","description":"<p>Greater than or equal with a constant.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#clt","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#clt\">clt</a>","description":"<p>Less than with a constant.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#clteq","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#clteq\">clteq</a>","description":"<p>Less than or equal with a constant.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#cmult","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#cmult\">cmult</a>","description":"<p>Multiplication by a constant.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#cneq","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#cneq\">cneq</a>","description":"<p>Unequality test with a constant.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#cor_bit","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#cor_bit\">cor_bit</a>","description":"<p>bitwise-OR with a constant (BOTH BITS).</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#cpow","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#cpow\">cpow</a>","description":"<p>Fast (modular) exponentiation with constant exponent via repeated squaring.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#csub","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#csub\">csub</a>","description":"<p>Subtraction with a constant.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#cxor_bit","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#cxor_bit\">cxor_bit</a>","description":"<p>bitwise-XOR with a constant (BOTH BITS).</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#div","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#div\">div</a>","description":"<p>Generic Integer Divison.\nUses either the constant or secret version of this operator depending on type of paramter.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#eq","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#eq\">eq</a>","description":"<p>Generic Equals.\nUses either the constant or secret version of this operator depending on type of paramter.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#error","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#error\">error</a>","description":"<p>Logs an error. Passes the error on to the associated jiff client instance's {@link handlers.error}</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#gt","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#gt\">gt</a>","description":"<p>Generic Greater than.\nUses either the constant or secret version of this operator depending on type of paramter.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#gteq","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#gteq\">gteq</a>","description":"<p>Generic Greater or equal.\nUses either the constant or secret version of this operator depending on type of paramter.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#holders","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#holders\">holders</a>","description":"<p>Array of party ids who hold shares of the corresponding secret</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#if_else","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#if_else\">if_else</a>","description":"<p>Simulate an oblivious If-else statement with a single return value.\nShould be called on a secret share of a bit: 0 representing false, and 1 representing true\nIf this is a share of 1, a new sharing of the element represented by the first parameter is returned,\notherwise, a new sharing of the second is returned.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#isConstant","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#isConstant\">isConstant</a>","description":"<p>Checks if the given parameter is a constant, used to determine whether constant or secret\noperations should be executed when the generic version of an operation is called</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#jiff","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#jiff\">jiff</a>","description":"<p>The jiff client instance this share belongs to</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#logLEAK","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#logLEAK\">logLEAK</a>","description":"<p>Logs the value represented by this share to the console\nWARNING: THIS LEAKS INFORMATION AND MUST BE USED ONLY TO DEBUG ON FAKE DATA</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#lt","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#lt\">lt</a>","description":"<p>Generic Less than.\nUses either the constant or secret version of this operator depending on type of paramter.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#lt_halfprime","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#lt_halfprime\">lt_halfprime</a>","description":"<p>Checks whether the share is less than half the field size.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#lteq","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#lteq\">lteq</a>","description":"<p>Generic Less or equal.\nUses either the constant or secret version of this operator depending on type of paramter.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#mult","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#mult\">mult</a>","description":"<p>Generic Multiplication.\nUses either the constant or secret version of this operator depending on type of paramter.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#neq","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#neq\">neq</a>","description":"<p>Generic Not Equals.\nUses either the constant or secret version of this operator depending on type of paramter.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#not","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#not\">not</a>","description":"<p>Negation of a bit.\nThis has to be a share of a BIT in order for this to work properly.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#open","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#open\">open</a>","description":"<p>Shortcut for opening/revealing the value of this share. Alias for open in jiff-instance</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#or_bit","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#or_bit\">or_bit</a>","description":"<p>Generic OR for bits (both this and o have to be bits to work correctly).\nUses either the constant or secret version of this operator depending on type of paramter.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#promise_handler","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#promise_handler\">promise_handler</a>","description":"<p>Handler for when this share's promise (if any) is resolved</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#ready","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#ready\">ready</a>","description":"<p>Indicates if the secret share's value is ready or still a promise</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#refresh","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#refresh\">refresh</a>","description":"<p>Reshares/refreshes the sharing of this number, used before opening to keep the share secret.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#sadd","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#sadd\">sadd</a>","description":"<p>Addition of two secret shares.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#sdiv","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#sdiv\">sdiv</a>","description":"<p>Integer divison with two shares (this / o)</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#seq","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#seq\">seq</a>","description":"<p>Equality test with two shares.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#sgt","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#sgt\">sgt</a>","description":"<p>Greater than with another share.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#sgteq","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#sgteq\">sgteq</a>","description":"<p>Greater than or equal with another share.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#slt","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#slt\">slt</a>","description":"<p>Less than with another share.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#slteq","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#slteq\">slteq</a>","description":"<p>Less than or equal with another share.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#smod","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#smod\">smod</a>","description":"<p>Remainder with two shares (this % o)</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#smult","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#smult\">smult</a>","description":"<p>Multiplication of two secret shares through Beaver Triplets.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#smult_bgw","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#smult_bgw\">smult_bgw</a>","description":"<p>Multiplication of two secret shares through BGW protocol.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#sneq","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#sneq\">sneq</a>","description":"<p>Unequality test with two shares.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#sor_bit","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#sor_bit\">sor_bit</a>","description":"<p>OR of two secret shares OF BITS.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#ssub","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#ssub\">ssub</a>","description":"<p>Subtraction of two secret shares.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#sub","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#sub\">sub</a>","description":"<p>Generic Subtraction.\nUses either the constant or secret version of this operator depending on type of paramter.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#sxor_bit","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#sxor_bit\">sxor_bit</a>","description":"<p>bitwise-XOR of two secret shares OF BITS.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#threshold","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#threshold\">threshold</a>","description":"<p>The sharing threshold</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#toString","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#toString\">toString</a>","description":"<p>Gets a string representation of this share</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#value","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#value\">value</a>","description":"<p>The value of the share (or a promise to it)</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#valueOf","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#valueOf\">valueOf</a>","description":"<p>Gets the value of this share</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#when_both_ready","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#when_both_ready\">when_both_ready</a>","description":"<p>Executes callback when both this share and o are ready and returns the result (or a promise to the result)</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#wThen","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#wThen\">wThen</a>","description":"<p>Wrapper around share.value.then.\nIn case share is ready (its promise is resolved and cleared)\nThe callback is executed immediately.\nDoes not support chaining</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#xor_bit","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#xor_bit\">xor_bit</a>","description":"<p>Generic XOR for bits (both this and o have to be bits to work correctly).\nUses either the constant or secret version of this operator depending on type of paramter.</p>"},{"title":"module:jiff-client~JIFFClient#SecretShare#Zp","link":"<a href=\"module-jiff-client-JIFFClient_SecretShare.html#Zp\">Zp</a>","description":"<p>The field prime under which the corresponding secret is shared</p>"},{"title":"module:jiff-client~JIFFClient#seed_ids","link":"<a href=\"module-jiff-client-JIFFClient.html#seed_ids\">seed_ids</a>","description":"<p>Shorthand for generating unique operation ids.\nAll primitives called after this seed will use their usual default ids prefixed by the seed.\nHelpful when we have nested callbacks/functions (e.g. share_arrays) that may be executed in arbitrary order,\nusing this function as a the first call inside such callbacks with an appropriate deterministic unique base_op_id\nensures that regardless of the order of execution, operations in the same callback are matched correctly across\nall parties.\nCheck out demos/graph-pip/mpc.js for an example on using this.</p>"},{"title":"module:jiff-client~JIFFClient#share","link":"<a href=\"module-jiff-client-JIFFClient.html#share\">share</a>","description":"<p>Share a secret input</p>\n<p>Can be overriden by extensions to customize behavior</p>"},{"title":"module:jiff-client~JIFFClient#share_2D_array","link":"<a href=\"module-jiff-client-JIFFClient.html#share_2D_array\">share_2D_array</a>","description":"<p>Share an array of values. Each sender may have an array of different length. This is handled by the lengths parameter.\nThis function will reveal the lengths of the shared array.</p>\n<p>If parties would like to keep the lengths of their arrays secret, they should agree on some &quot;max&quot; length apriori (either under MPC\nor as part of the logistics of the computation), all their arrays should be padded to that length by using appropriate default/identity\nvalues.</p>"},{"title":"module:jiff-client~JIFFClient#share_array","link":"<a href=\"module-jiff-client-JIFFClient.html#share_array\">share_array</a>","description":"<p>Share an array of values. Each sender may have an array of different length. This is handled by the lengths parameter.\nThis function will reveal the lengths of the shared array.</p>\n<p>If parties would like to keep the lengths of their arrays secret, they should agree on some public &quot;max&quot; length apriori (either under MPC\nor as part of the logistics of the computation), all their arrays should be padded to that length by using appropriate default/identity\nvalues</p>"},{"title":"module:jiff-client~JIFFClient#share_helpers","link":"<a href=\"module-jiff-client-JIFFClient.html#share_helpers\">share_helpers</a>","description":"<p>Internal helpers for operations inside/on a share. Modify existing helpers or add more in your extensions\nto avoid having to re-write and duplicate the code for primitives.</p>"},{"title":"module:jiff-client~JIFFClient#share_ND_array","link":"<a href=\"module-jiff-client-JIFFClient.html#share_ND_array\">share_ND_array</a>","description":"<p>Share an n-dimensional array of secrets\nThe arrays can be of different lengths and dimensions.</p>"},{"title":"module:jiff-client~JIFFClient#share_ND_array_deferred","link":"<a href=\"module-jiff-client-JIFFClient.html#share_ND_array_deferred\">share_ND_array_deferred</a>","description":"<p>Helper function of share_ND_array\nThis method gets called if share_ND_array does not have enough information\nto output an array of shares immediately.  Instead it\nreturns a promise to an object holding the unknown-size\narrays from each sender.</p>"},{"title":"module:jiff-client~JIFFClient#share_ND_array_static","link":"<a href=\"module-jiff-client-JIFFClient.html#share_ND_array_static\">share_ND_array_static</a>","description":"<p>Helper function of share_ND_array\nThis method gets called if share_ND_array when share_ND_array was given\nsufficients information (in the form of array skeletons) to\ninfer the size and shape of each of the senders' arrays.\nThis allows it to immediately return an object containing\nthe secret-shared arrays from each sender.</p>"},{"title":"module:jiff-client~JIFFClient#shares","link":"<a href=\"module-jiff-client-JIFFClient.html#shares\">shares</a>","description":"<p>A map from open operation id to the corresponding shares received for that open operation</p>"},{"title":"module:jiff-client~JIFFClient#sodium_","link":"<a href=\"module-jiff-client-JIFFClient.html#sodium_\">sodium_</a>","description":"<p>sodium wrappers either imported via require (if in nodejs) or from the bundle (in the browser).\nThis will be false if options.sodium is false.</p>"},{"title":"module:jiff-client~JIFFClient#start_barrier","link":"<a href=\"module-jiff-client-JIFFClient.html#start_barrier\">start_barrier</a>","description":"<p>Starts a new barrier, all promises and secret shares created between this call and the corresponding start_barrier\ncall will be part of this barrier. start_barrier may be called before previous barriers are resolved, in which\ncase promises / secret shares created will be part of the new barrier as well as any previous barriers.</p>"},{"title":"module:jiff-client~JIFFClient#store_preprocessing","link":"<a href=\"module-jiff-client-JIFFClient.html#store_preprocessing\">store_preprocessing</a>","description":"<p>Store a pair of op_id and associated pre-processed value/share\nThe value/share can be accessed later during the computation through jiffClient.get_preprocessing(op_id)</p>"},{"title":"module:jiff-client~JIFFClient#utils","link":"<a href=\"module-jiff-client-JIFFClient.html#utils\">utils</a>","description":"<p>Utility functions</p>"},{"title":"module:jiff-client~JIFFClient#wait_callbacks","link":"<a href=\"module-jiff-client-JIFFClient.html#wait_callbacks\">wait_callbacks</a>","description":"<p>Stores the parties and callbacks for every .wait_for() registered by the user.</p>"},{"title":"module:jiff-client~JIFFClient#Zp","link":"<a href=\"module-jiff-client-JIFFClient.html#Zp\">Zp</a>","description":"<p>The default Zp for this instance.</p>"},{"title":"module:jiff-client~JIFFClientInstance.socket","link":"<a href=\"module-jiff-client-JIFFClientInstance.html#.socket\">socket</a>","description":"<p>Socket wrapper between this instance and the server, based on sockets.io</p>"},{"title":"protocols","link":"<a href=\"protocols.html\">protocols</a>","description":"<p>Contains miscellaneous protocols (mostly used in preprocessing)</p>"},{"title":"protocols.bits","link":"<a href=\"protocols.html#.bits\">bits</a>","description":"<p>A collection of useful protocols for manipulating bitwise shared numbers, and transforming them from and to regular numeric shares.</p>"},{"title":"protocols.jiffClient.protocols.generate_beaver_bgw","link":"<a href=\"protocols.html#.jiffClient.protocols.generate_beaver_bgw\">jiffClient.protocols.generate_beaver_bgw</a>","description":"<p>Generation of beaver triplet via MPC, uses the server for communication channels, but not for generation</p>"},{"title":"protocols.jiffClient.protocols.generate_random_and_quotient","link":"<a href=\"protocols.html#.jiffClient.protocols.generate_random_and_quotient\">jiffClient.protocols.generate_random_and_quotient</a>","description":"<p>Creates shares of r and x, such that r is a uniform random number between 0 and Zp, and x is floor(r/constant)\nwhere constant is provided by the extra params</p>"},{"title":"protocols.jiffClient.protocols.generate_random_bit_bgw","link":"<a href=\"protocols.html#.jiffClient.protocols.generate_random_bit_bgw\">jiffClient.protocols.generate_random_bit_bgw</a>","description":"<p>Generates a random bit under MPC by xoring all bits sent by participating parties using smult_bgw</p>"},{"title":"protocols.jiffClient.protocols.generate_random_bit_smult","link":"<a href=\"protocols.html#.jiffClient.protocols.generate_random_bit_smult\">jiffClient.protocols.generate_random_bit_smult</a>","description":"<p>Generates a random bit under MPC by xoring all bits sent by participating parties using smult / beaver triples</p>"},{"title":"protocols.jiffClient.protocols.generate_random_bits","link":"<a href=\"protocols.html#.jiffClient.protocols.generate_random_bits\">jiffClient.protocols.generate_random_bits</a>","description":"<p>Generates a sequence of random bits under MPC.</p>"},{"title":"protocols.jiffClient.protocols.generate_random_number","link":"<a href=\"protocols.html#.jiffClient.protocols.generate_random_number\">jiffClient.protocols.generate_random_number</a>","description":"<p>Creates shares of an unknown random number. Every party comes up with its own random number and shares it.\nThen every party combines all the received shares to construct one share of the random unknown number.</p>"},{"title":"protocols.jiffClient.protocols.generate_zero","link":"<a href=\"protocols.html#.jiffClient.protocols.generate_zero\">jiffClient.protocols.generate_zero</a>","description":"<p>Creates shares of 0, such that no party knows the other parties' shares.\nEvery party secret shares 0, then every party sums all the shares they received, resulting\nin a new share of 0 for every party.</p>"},{"title":"protocols.jiffClient.protocols.rejection_sampling","link":"<a href=\"protocols.html#.jiffClient.protocols.rejection_sampling\">jiffClient.protocols.rejection_sampling</a>","description":"<p>Wrapper for when doing rejection sampling during pre processing</p>\n<p>Do not use this function directly, especially during online computation time, use jiffClient.protocols.bits.rejection_sampling instead</p>"},{"title":"utils","link":"<a href=\"utils.html\">utils</a>","description":"<p>Contains utility functions (higher order combinators)</p>"},{"title":"utils.jiffClient.utils.bit_combinator","link":"<a href=\"utils.html#.jiffClient.utils.bit_combinator\">jiffClient.utils.bit_combinator</a>","description":"<p>A high level combinator for iteration of bit arrays\nIt executes a round of (func) starting from index start to the length (supports backwards if start &gt; length) excluding length\nEvery round is blocked until the previous one finishes and the promise produced by it\nis resolved\nThe final value is used to resolve deferred</p>"},{"title":"utils.jiffClient.utils.many_secret_shares","link":"<a href=\"utils.html#.jiffClient.utils.many_secret_shares\">jiffClient.utils.many_secret_shares</a>","description":"<p>Create an array of secret shares and associated deferred.</p>"},{"title":"utils.jiffClient.utils.resolve_many_secrets","link":"<a href=\"utils.html#.jiffClient.utils.resolve_many_secrets\">jiffClient.utils.resolve_many_secrets</a>","description":"<p>Resolve the array of deferreds with the values of the given shares when ready, matched by index</p>"}]}