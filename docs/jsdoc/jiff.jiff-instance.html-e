<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>JSDoc: Namespace: jiff-instance</title>

    <script src="scripts/prettify/prettify.js"> </script>
    <script src="scripts/prettify/lang-css.js"> </script>
    <!--[if lt IE 9]>
      <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    <link type="text/css" rel="stylesheet" href="styles/prettify-tomorrow.css">
    <link type="text/css" rel="stylesheet" href="styles/jsdoc-default.css">
</head>

<body>

<div id="main">

    <h1 class="page-title">Namespace: jiff-instance</h1>

    




<section>

<header>
    
        <h2>
            <span class="ancestors"><a href="jiff.html">jiff</a>.</span>jiff-instance</h2>
        
    
</header>

<article>
    <div class="container-overview">
    
        
            <div class="description">The interface defined by an instance of jiff.
You can get an instance of jiff by calling function jiff.make_jiff.
You can access any of the specified members of function with &lt;jiff-instance&gt;.&lt;member-name&gt;.</div>
        

        


<dl class="details">

    
    <dt class="tag-version">Version:</dt>
    <dd class="tag-version"><ul class="dummy"><li>1.0</li></ul></dd>
    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line1674">line 1674</a>
    </li></ul></dd>
    

    

    

    
</dl>


        
    
    </div>

    

    

    

    

    

    
        <h3 class="subsection-title">Namespaces</h3>

        <dl>
            <dt><a href="jiff.jiff-instance.helpers.html">helpers</a></dt>
            <dd></dd>
        </dl>
    

    
        <h3 class="subsection-title">Members</h3>

        
            
<h4 class="name" id="__ready"><span class="type-signature"></span>__ready<span class="type-signature"> :boolean</span></h4>




<div class="description">
    Flags whether this instance is capable of starting the computation.
In other words, the public keys for all parties and servers are known,
and the server is connected. [Do not use; ufse isReady() instead]
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">boolean</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line1745">line 1745</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id="computation_id"><span class="type-signature"></span>computation_id<span class="type-signature"> :string</span></h4>




<div class="description">
    Stores the computation id. [Do not modify]
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">string</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line1737">line 1737</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id="hooks"><span class="type-signature"></span>hooks<span class="type-signature"> :object</span></h4>




<div class="description">
    The hooks for this instance.
Checkout the <a href="hooks.html">hooks documentation</a>
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">object</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line1881">line 1881</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id="id"><span class="type-signature"></span>id<span class="type-signature"> :number</span></h4>




<div class="description">
    The id of this party. [Do not modify]
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">number</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line1729">line 1729</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id="keymap"><span class="type-signature"></span>keymap<span class="type-signature"> :object</span></h4>




<div class="description">
    A map from party id to public key. Where key is the party id (number), and
value is the public key (Uint8Array).
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">object</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line1832">line 1832</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id="listeners"><span class="type-signature"></span>listeners<span class="type-signature"> :object</span></h4>




<div class="description">
    A map from tags to listeners (functions that take a sender_id and a string message).
Stores listeners that are attached to this JIFF instance, listeners listen to custom messages sent by other parties
with a corresponding tag to the tag provided with the listener.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">object</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line1871">line 1871</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id="modules"><span class="type-signature"></span>modules<span class="type-signature"> :array.&lt;string></span></h4>




<div class="description">
    An array containing the names (jiff-client-[name].js) of extensions
applied to this instance.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">array.&lt;string></span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line1720">line 1720</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id="party_count"><span class="type-signature"></span>party_count<span class="type-signature"> :number</span></h4>




<div class="description">
    Total party count in the computation, parties will take ids between 1 to party_count (inclusive).
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">number</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line1860">line 1860</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id="public_key"><span class="type-signature"></span>public_key<span class="type-signature"> :Uint8Array</span></h4>




<div class="description">
    The public key of this party <a href="https://download.libsodium.org/doc/public-key_cryptography/authenticated_encryption.html">(check Library Specs)</a>. [Do not modify]
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Uint8Array</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line1850">line 1850</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id="secret_key"><span class="type-signature"></span>secret_key<span class="type-signature"> :Uint8Array</span></h4>




<div class="description">
    The secret key of this party <a href="https://download.libsodium.org/doc/public-key_cryptography/authenticated_encryption.html">(check Library Specs)</a>. [Do not modify]
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">Uint8Array</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line1843">line 1843</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id="server_count"><span class="type-signature"></span>server_count<span class="type-signature"> :number</span></h4>




<div class="description">
    Total server count in the computation, servers will take ids between "s1" to "s<server_count>" (inclusive).
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">number</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line1989">line 1989</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
            
<h4 class="name" id="wait_callbacks"><span class="type-signature"></span>wait_callbacks<span class="type-signature"> :array</span></h4>




<div class="description">
    Stores the parties and callbacks for every .wait_for() registered.
</div>



    <h5>Type:</h5>
    <ul>
        <li>
            
<span class="param-type">array</span>


        </li>
    </ul>





<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line1929">line 1929</a>
    </li></ul></dd>
    

    

    

    
</dl>






        
    

    
        <h3 class="subsection-title">Methods</h3>

        
            

    

    
    <h4 class="name" id=".connect"><span class="type-signature">(static) </span>connect<span class="signature">()</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Connect to the server and starts listening.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line1997">line 1997</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id=".secret_share"><span class="type-signature">(static) </span>secret_share<span class="signature">(jiff, ready, promise, value, holders, threshold, Zp)</span><span class="type-signature"> &rarr; {<a href="secret-share.html">secret-share</a>}</span></h4>
    

    



<div class="description">
    The function used by JIFF to create a new share. This can be used by modules to create custom shares.
Modifying this will modify how shares are generated in the BASE JIFF implementation.
A share is a value wrapper with a share object, it has a unique id
(per computation instance), and a pointer to the instance it belongs to.
A share also has methods for performing operations.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>jiff</code></td>
            

            <td class="type">
            
                
<span class="param-type">jiff-instance</span>


            
            </td>

            

            

            <td class="description last">the jiff instance.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>ready</code></td>
            

            <td class="type">
            
                
<span class="param-type">boolean</span>


            
            </td>

            

            

            <td class="description last">whether the value of the share is ready or deferred.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>promise</code></td>
            

            <td class="type">
            
                
<span class="param-type">promise</span>


            
            </td>

            

            

            <td class="description last">a promise to the value of the share.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>value</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">the value of the share (null if not ready).</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>holders</code></td>
            

            <td class="type">
            
                
<span class="param-type">array</span>


            
            </td>

            

            

            <td class="description last">the parties that hold all the corresponding shares (must be sorted).</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>threshold</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">the minimimum number of parties needed to reconstruct the secret.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>Zp</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">the modulos under which this share was created.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line2206">line 2206</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    the secret share object containing the give value.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type"><a href="secret-share.html">secret-share</a></span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="coerce_to_share"><span class="type-signature"></span>coerce_to_share<span class="signature">(number, holders, Zp, id)</span><span class="type-signature"> &rarr; {share-object}</span></h4>
    

    



<div class="description">
    Coerce a number into a share.
THIS DOES NOT SHARE THE GIVEN NUMBER.
It is a local type-coersion by invoking the constructor on the given parameter,
this is useful for for operating on constants, not sharing secret data.
If all parties use this function with the same input number, then
you can think of their shares as being a share of that constant with threshold 1.
In other words, a trivial sharing scheme where the share is the number itself.
However, if some parties used different input numbers, then the actual value
yielded by reconstruction/opening of all these shares is arbitrary and depends
on all the input numbers of all parties.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>number</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">the number to coerce.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>holders</code></td>
            

            <td class="type">
            
                
<span class="param-type">array</span>


            
            </td>

            

            

            <td class="description last">array of party ids that will hold the shares, by default, this includes all parties. [optional]</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>Zp</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">the modulos (if null then the default Zp for the instance is used). [optional]</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>id</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">this share's id (should be unique). [optional]</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line2381">line 2381</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    a share object containing the given number.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">share-object</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="emit"><span class="type-signature"></span>emit<span class="signature">(tag, receivers, message)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Send a custom message to a subset of parties.
Please Note that the message is sent unencrypted and the server can read/forge it.
Use jiff.hooks.encryptSign / jiff.hooks.decryptSign
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>tag</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">the tag to attach to the message.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>receivers</code></td>
            

            <td class="type">
            
                
<span class="param-type">array</span>


            
            </td>

            

            

            <td class="description last">contains the party ids to receive the message, all non-server parties if null.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>message</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">the message to send.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line2016">line 2016</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="execute_array_hooks"><span class="type-signature"></span>execute_array_hooks<span class="signature">(hook_name, params, acc_index)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Execute all hooks attached to the given name in order.
Hooks are executed sequentially such that the first hook's return value is passed into the second and so on.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>hook_name</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">the name of the hook</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>params</code></td>
            

            <td class="type">
            
                
<span class="param-type">array</span>


            
            </td>

            

            

            <td class="description last">parameters to pass to the hooks</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>acc_index</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">the index in params in which the result of the hooks must be saved, if no hooks
                            exist for the name, then params[acc_index] is returned.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line1908">line 1908</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    returns the result of the [last] hook.
</div>



    





        
            

    

    
    <h4 class="name" id="generate_and_share_random"><span class="type-signature"></span>generate_and_share_random<span class="signature">(threshold, receivers_list, senders_list, Zp)</span><span class="type-signature"> &rarr; {share-object}</span></h4>
    

    



<div class="description">
    Creates shares of an unknown random number. Every party comes up with its own random number and shares it.
Then every party combines all the received shares to construct one share of the random unknown number.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>threshold</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">the minimimum number of parties needed to reconstruct the secret, defaults to all the recievers. [optional]</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>receivers_list</code></td>
            

            <td class="type">
            
                
<span class="param-type">array</span>


            
            </td>

            

            

            <td class="description last">array of party ids to share with, by default, this includes all parties. [optional]</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>senders_list</code></td>
            

            <td class="type">
            
                
<span class="param-type">array</span>


            
            </td>

            

            

            <td class="description last">array of party ids to receive from, by default, this includes all parties. [optional]</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>Zp</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">the modulos (if null then the default Zp for the instance is used). [optional]</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line2328">line 2328</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    a secret share of the random number, null if this party is not a receiver.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">share-object</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="generate_and_share_zero"><span class="type-signature"></span>generate_and_share_zero<span class="signature">(threshold, receivers_list, senders_list, Zp)</span><span class="type-signature"> &rarr; {share-object}</span></h4>
    

    



<div class="description">
    Creates shares of 0, such that no party knows the other parties' shares.
Every party secret shares 0, then every party sums all the shares they received, resulting
in a new share of 0 for every party.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>threshold</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">the minimimum number of parties needed to reconstruct the secret, defaults to all the recievers. [optional]</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>receivers_list</code></td>
            

            <td class="type">
            
                
<span class="param-type">array</span>


            
            </td>

            

            

            <td class="description last">array of party ids to share with, by default, this includes all parties. [optional]</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>senders_list</code></td>
            

            <td class="type">
            
                
<span class="param-type">array</span>


            
            </td>

            

            

            <td class="description last">array of party ids to receive from, by default, this includes all parties. [optional]</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>Zp</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">the modulos (if null then the default Zp for the instance is used). [optional]</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line2344">line 2344</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    a secret share of zero, null if this party is not a receiver.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">share-object</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="isReady"><span class="type-signature"></span>isReady<span class="signature">()</span><span class="type-signature"> &rarr; {boolean}</span></h4>
    

    



<div class="description">
    Checks whether this instance is connected and the server signaled the start of computation.
</div>













<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line1755">line 1755</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    true if the instance is ready, false otherwise.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">boolean</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="listen"><span class="type-signature"></span>listen<span class="signature">(tag, handler)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Registers the given function as a listener for messages with the given tag.
Removes any previously set listener for this tag.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>tag</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">the tag to listen for.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>handler</code></td>
            

            <td class="type">
            
                
<span class="param-type">function</span>


            
            </td>

            

            

            <td class="description last">the function that handles the received message: takes the sender id and the message as parameters.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line2036">line 2036</a>
    </li></ul></dd>
    

    

    

    
</dl>


















        
            

    

    
    <h4 class="name" id="open"><span class="type-signature"></span>open<span class="signature">(share, parties, op_ids)</span><span class="type-signature"> &rarr; {promise}</span></h4>
    

    



<div class="description">
    Open a secret share to reconstruct secret.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>share</code></td>
            

            <td class="type">
            
                
<span class="param-type">share-object</span>


            
            </td>

            

            

            <td class="description last">this party's share of the secret to reconstruct.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>parties</code></td>
            

            <td class="type">
            
                
<span class="param-type">array</span>


            
            </td>

            

            

            <td class="description last">an array with party ids (1 to n) of receiving parties. [optional]</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>op_ids</code></td>
            

            <td class="type">
            
                
<span class="param-type">string/number/object</span>


            
            </td>

            

            

            <td class="description last">an optional mapping that specifies the ID/Tag associated with each
                                       open message sent.
                                       If this is an object, then it should map an id of a receiving parties
                                       to the op_id that should be used to tag the message sent to that party.
                                       Parties left unmapped by this object will get an automatically generated id.
                                       If this is a number/string, then it will be used as the id tagging all messages
                                       sent by this open to all parties.
                                       You can saftly ignore this unless you have multiple opens each containing other opens.
                                       In that case, the order by which these opens are executed is not fully deterministic
                                       and depends on the order of arriving messages. In this case, use this parameter
                                       with every nested_open, to ensure ids are unique and define a total ordering on
                                       the execution of the opens (check implementation of sgteq for an example).
                                       TODO: automate this for the described scenario.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line2249">line 2249</a>
    </li></ul></dd>
    

    

    

    
</dl>











<h5>Throws:</h5>

        

    <div class="param-desc">
    
        error if share does not belong to the passed jiff instance.
    
    </div>


    


<h5>Returns:</h5>

        
<div class="param-desc">
    a (JQuery) promise to the open value of the secret.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="open_all"><span class="type-signature"></span>open_all<span class="signature">(shares, parties)</span><span class="type-signature"> &rarr; {promise}</span></h4>
    

    



<div class="description">
    Opens a bunch of secret shares.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>shares</code></td>
            

            <td class="type">
            
                
<span class="param-type">array.&lt;share-object></span>


            
            </td>

            

            

            <td class="description last">an array containing this party's shares of the secrets to reconstruct.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>parties</code></td>
            

            <td class="type">
            
                
<span class="param-type">array</span>


            
            </td>

            

            

            <td class="description last">an array with party ids (1 to n) of receiving parties. [optional]
                         This must be one of 3 cases:
                         1. null:                       open all shares to all parties.
                         2. array of numbers:           open all shares to all the parties specified in the array.
                         3. array of array of numbers:  open share with index i to the parties specified
                                                        in the nested array at parties[i]. if parties[i] was null,
                                                        then shares[i] will be opened to all parties.</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line2274">line 2274</a>
    </li></ul></dd>
    

    

    

    
</dl>











<h5>Throws:</h5>

        

    <div class="param-desc">
    
        error if some shares does not belong to the passed jiff instance.
    
    </div>


    


<h5>Returns:</h5>

        
<div class="param-desc">
    a (JQuery) promise to ALL the open values of the secret, the promise will yield
                   an array of values, each corresponding to the given share in the shares parameter
                   at the same index.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="receive_open"><span class="type-signature"></span>receive_open<span class="signature">(parties, threshold, Zp, op_ids)</span><span class="type-signature"> &rarr; {promise}</span></h4>
    

    



<div class="description">
    Receive shares from the specified parties and reconstruct their secret.
Use this function in a party that will receive some answer/value but does not have a share of it.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>parties</code></td>
            

            <td class="type">
            
                
<span class="param-type">array</span>


            
            </td>

            

            

            <td class="description last">an array with party ids (1 to n) specifying the parties sending the shares.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>threshold</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">the minimimum number of parties needed to reconstruct the secret, defaults to all the senders. [optional]</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>Zp</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">the modulos (if null then the default Zp for the instance is used). [optional]</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>op_ids</code></td>
            

            <td class="type">
            
                
<span class="param-type">string/number/object</span>


            
            </td>

            

            

            <td class="description last">same as jiff.jiff-instance.open(..)</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line2294">line 2294</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    a (JQuery) promise to the open value of the secret.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">promise</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="server_generate_and_share"><span class="type-signature"></span>server_generate_and_share<span class="signature">(options, receivers_list, threshold, Zp, number_id)</span><span class="type-signature"> &rarr; {share-object}</span></h4>
    

    



<div class="description">
    Use the server to generate shares for a random bit, zero, random non-zero number, or a random number.
The parties will not know the value of the number (unless the request is for shares of zero) nor other parties' shares.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>options</code></td>
            

            <td class="type">
            
                
<span class="param-type">object</span>


            
            </td>

            

            

            <td class="description last">an object with these properties:
                          { "number": number, "bit": boolean, "nonzero": boolean, "max": number}</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>receivers_list</code></td>
            

            <td class="type">
            
                
<span class="param-type">array</span>


            
            </td>

            

            

            <td class="description last">array of party ids that want to receive the triplet shares, by default, this includes all parties. [optional]</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>threshold</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">the minimimum number of parties needed to reconstruct the triplet.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>Zp</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">the modulos (if null then the default Zp for the instance is used). [optional]</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>number_id</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">the number id which is used to identify this request, so that every party
                            gets a share from the same number for every matching instruction. An automatic number id
                            is generated by increasing a local counter, default ids suffice when all parties execute the
                            instructions in the same order. [optional]</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line2362">line 2362</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    a secret share of zero/random bit/random number/random non-zero number.
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">share-object</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="share"><span class="type-signature"></span>share<span class="signature">(secret, threshold, receivers_list, senders_list, Zp, share_id)</span><span class="type-signature"> &rarr; {object}</span></h4>
    

    



<div class="description">
    Share a secret input.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>secret</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">the number to share (this party's input).</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>threshold</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">the minimimum number of parties needed to reconstruct the secret, defaults to all the recievers. [optional]</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>receivers_list</code></td>
            

            <td class="type">
            
                
<span class="param-type">array</span>


            
            </td>

            

            

            <td class="description last">array of party ids to share with, by default, this includes all parties. [optional]</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>senders_list</code></td>
            

            <td class="type">
            
                
<span class="param-type">array</span>


            
            </td>

            

            

            <td class="description last">array of party ids to receive from, by default, this includes all parties. [optional]</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>Zp</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">the modulos (if null then the default Zp for the instance is used). [optional]</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>share_id</code></td>
            

            <td class="type">
            
                
<span class="param-type">string/number</span>


            
            </td>

            

            

            <td class="description last">the tag used to tag the messages sent by this share operation, this tag is used
                                  so that parties distinguish messages belonging to this share operation from other
                                  share operations between the same parties (when the order of execution is not
                                  deterministic). An automatic id is generated by increasing a local counter, default
                                  ids suffice when all parties execute all sharing operations with the same senders
                                  and receivers in the same order. [optional]</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line2226">line 2226</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    a map (of size equal to the number of parties)
         where the key is the party id (from 1 to n)
         and the value is the share object that wraps
         the value sent from that party (the internal value maybe deferred).
</div>



<dl>
    <dt>
        Type
    </dt>
    <dd>
        
<span class="param-type">object</span>


    </dd>
</dl>

    





        
            

    

    
    <h4 class="name" id="triplet"><span class="type-signature"></span>triplet<span class="signature">(receivers_list, threshold, Zp, triplet_id)</span><span class="type-signature"></span></h4>
    

    



<div class="description">
    Creates 3 shares, a share for every one of three numbers from a beaver triplet.
The server generates and sends the triplets on demand.
</div>









    <h5>Parameters:</h5>
    

<table class="params">
    <thead>
    <tr>
        
        <th>Name</th>
        

        <th>Type</th>

        

        

        <th class="last">Description</th>
    </tr>
    </thead>

    <tbody>
    

        <tr>
            
                <td class="name"><code>receivers_list</code></td>
            

            <td class="type">
            
                
<span class="param-type">array</span>


            
            </td>

            

            

            <td class="description last">array of party ids that want to receive the triplet shares, by default, this includes all parties. [optional]</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>threshold</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">the minimimum number of parties needed to reconstruct the triplet.</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>Zp</code></td>
            

            <td class="type">
            
                
<span class="param-type">number</span>


            
            </td>

            

            

            <td class="description last">the modulos (if null then the default Zp for the instance is used). [optional]</td>
        </tr>

    

        <tr>
            
                <td class="name"><code>triplet_id</code></td>
            

            <td class="type">
            
                
<span class="param-type">string</span>


            
            </td>

            

            

            <td class="description last">the triplet id which is used to identify the triplet requested, so that every party
                             gets a share from the same triplet for every matching instruction. An automatic triplet id
                             is generated by increasing a local counter, default ids suffice when all parties execute the
                             instructions in the same order. [optional]</td>
        </tr>

    
    </tbody>
</table>






<dl class="details">

    

    

    

    

    

    

    

    

    

    

    

    

    
    <dt class="tag-source">Source:</dt>
    <dd class="tag-source"><ul class="dummy"><li>
        <a href="jiff-client.js.html">jiff-client.js</a>, <a href="jiff-client.js.html#line2311">line 2311</a>
    </li></ul></dd>
    

    

    

    
</dl>













<h5>Returns:</h5>

        
<div class="param-desc">
    an array of 3 share-objects [share_a, share_b, share_c] such that a * b = c.
</div>



    





        
    

    

    
</article>

</section>




</div>

<nav>
    <h2><a href="index.html">Home</a></h2><h3>Namespaces</h3><ul><li><a href="jiff.html">jiff</a></li><li><a href="jiff.jiff-instance.html">jiff-instance</a></li><li><a href="jiff.jiff-instance.helpers.html">helpers</a></li><li><a href="secret-share.html">secret-share</a></li></ul>
</nav>

<br class="clear">

<footer>
    Documentation generated by <a href="https://github.com/jsdoc3/jsdoc">JSDoc 3.5.5</a> on Fri May 18 2018 13:15:35 GMT-0400 (EDT)
</footer>

<script> prettyPrint(); </script>
<script src="scripts/linenumber.js"> </script>
</body>
</html>
